run:
  timeout: 5m
  modules-download-mode: vendor
  skip-files:
    - "fixtures.go"

linters-settings:
  nlreturn:
    block-size: 3
  funlen:
    statements: 65


  cyclop:
    # the maximal code complexity to report, 8 by default
    max-complexity: 9

  godot:
    scope: declarations

  gci:
    # put imports beginning with prefix after 3rd-party packages;
    # only support one prefix
    # if not set, use goimports.local-prefixes
    local-prefixes: github.com/selectel

  nestif:
    # minimal complexity of if statements to report, 5 by default
    min-complexity: 5

  tagliatelle:
    # check the struct tag name case
    case:
      # use the struct field name to check the name of the struct tag
      use-field-name: false
      rules:
        # any struct tag type can be used.
        # support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`,
        # `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
        json: snake
        yaml: snake
        xml: camel
        bson: camel
        avro: camel
        mapstructure: kebab

linters:
  fast: false
  disable-all: true
  enable:
    - asciicheck
#    - bodyclose
    - cyclop
    - deadcode
    - depguard
    - dogsled
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exhaustive
    - exportloopref
    - forbidigo
    - forcetypeassert
    - gci
    - goconst
    - gocritic
    - godot
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosimple
    - govet
    - ifshort
    - importas
    - ineffassign
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nlreturn
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - structcheck
    - stylecheck
    - tagliatelle
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - wastedassign
    - whitespace
